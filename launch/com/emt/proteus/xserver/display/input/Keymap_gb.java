/*     */ package com.emt.proteus.xserver.display.input;
/*     */ 
/*     */ import java.awt.event.KeyEvent;
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ public final class Keymap_gb
/*     */   extends Keymap
/*     */ {
/*  25 */   private int[] _map = { 65288, 0, 0, 0, 65289, 0, 0, 0, 65421, 0, 0, 0, 65508, 0, 0, 0, 65291, 0, 0, 0, 65293, 0, 0, 0, 65406, 0, 0, 0, 65365, 0, 0, 0, 65505, 0, 0, 0, 65507, 0, 0, 0, 65513, 65511, 0, 0, 65299, 0, 0, 0, 65509, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 65366, 0, 0, 0, 65307, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 0, 65365, 0, 0, 0, 65366, 0, 0, 0, 65367, 0, 0, 0, 65360, 0, 0, 0, 65361, 0, 0, 0, 65362, 0, 0, 0, 65363, 0, 0, 0, 65364, 0, 0, 0, 65376, 0, 0, 0, 0, 0, 0, 0, 65378, 0, 0, 0, 65377, 0, 0, 0, 65379, 0, 0, 0, 65535, 0, 0, 0, 65386, 0, 0, 0, 48, 41, 0, 0, 49, 33, 0, 0, 50, 34, 0, 0, 51, 163, 0, 0, 52, 36, 0, 0, 53, 37, 0, 0, 54, 94, 0, 0, 55, 38, 0, 0, 56, 42, 0, 0, 57, 40, 0, 0, 65367, 0, 0, 0, 65360, 0, 0, 0, 65361, 0, 0, 0, 65362, 0, 0, 0, 65363, 0, 0, 0, 65364, 0, 0, 0, 65379, 0, 0, 0, 65, 0, 193, 0, 66, 0, 0, 0, 67, 0, 0, 0, 68, 0, 0, 0, 69, 0, 201, 0, 70, 0, 0, 0, 71, 0, 0, 0, 72, 0, 0, 0, 73, 0, 205, 0, 74, 0, 0, 0, 75, 0, 0, 0, 76, 0, 0, 0, 77, 0, 0, 0, 78, 0, 0, 0, 79, 0, 211, 0, 80, 0, 0, 0, 81, 0, 0, 0, 82, 0, 0, 0, 83, 0, 0, 0, 84, 0, 0, 0, 85, 0, 218, 0, 86, 0, 0, 0, 87, 0, 0, 0, 88, 0, 0, 0, 89, 0, 0, 0, 90, 0, 0, 0, 65535, 0, 0, 0, 65452, 0, 0, 0, 65455, 0, 0, 0, 65482, 0, 0, 0, 65483, 0, 0, 0, 65456, 0, 0, 0, 65457, 0, 0, 0, 65458, 0, 0, 0, 65459, 0, 0, 0, 65460, 0, 0, 0, 65461, 0, 0, 0, 65462, 0, 0, 0, 65463, 0, 0, 0, 65464, 0, 0, 0, 65465, 0, 0, 0, 65450, 0, 0, 0, 65451, 0, 0, 0, 65452, 0, 0, 0, 65453, 0, 0, 0, 65454, 0, 0, 0, 0, 0, 0, 0, 65470, 0, 0, 0, 65471, 0, 0, 0, 65472, 0, 0, 0, 65473, 0, 0, 0, 65474, 0, 0, 0, 65475, 0, 0, 0, 65476, 0, 0, 0, 65477, 0, 0, 0, 65478, 0, 0, 0, 65479, 0, 0, 0, 65480, 0, 0, 0, 65481, 0, 0, 0, 65482, 0, 0, 0, 65483, 0, 0, 0, 65484, 0, 0, 0, 65485, 0, 0, 0, 65486, 0, 0, 0, 65487, 0, 0, 0, 65488, 0, 0, 0, 65489, 0, 0, 0, 65490, 0, 0, 0, 65491, 0, 0, 0, 65492, 0, 0, 0, 65493, 0, 0, 0, 65484, 0, 0, 0, 65485, 0, 0, 0, 65486, 0, 0, 0, 65487, 0, 0, 0, 65488, 0, 0, 0, 65489, 0, 0, 0, 65490, 0, 0, 0, 65491, 0, 0, 0, 65492, 0, 0, 0, 65300, 0, 0, 0, 0, 0, 200, 0, 65493, 0, 0, 0, 65407, 0, 0, 0, 2813, 0, 202, 0, 65387, 0, 0, 0, 65506, 0, 0, 0, 65515, 65517, 0, 0, 65516, 65518, 0, 0, 65383, 0, 0, 0, 2294, 0, 203, 0, 2814, 0, 204, 0, 2734, 0, 206, 0, 2801, 0, 207, 0, 2802, 0, 208, 0, 2812, 0, 209, 0, 425, 0, 210, 0, 2748, 0, 212, 0, 2768, 0, 213, 0, 2769, 0, 214, 0, 2770, 0, 215, 247, 2771, 0, 216, 0, 2790, 0, 217, 0, 2730, 0, 219, 0, 2729, 0, 220, 0, 2761, 0, 221, 0, 441, 0, 222, 0, 2750, 0, 223, 255, 160, 0, 0, 0, 161, 0, 0, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 164, 0, 0, 0, 0, 0, 0, 0, 165, 0, 0, 0, 0, 0, 0, 0, 167, 0, 0, 0, 168, 0, 0, 0, 169, 0, 0, 0, 170, 0, 0, 0, 59, 58, 0, 0, 61, 43, 0, 0, 44, 60, 0, 0, 45, 95, 0, 0, 46, 62, 0, 0, 47, 63, 0, 0, 39, 64, 0, 0, 171, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 173, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 174, 0, 0, 0, 175, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 176, 0, 0, 0, 177, 0, 0, 0, 178, 0, 0, 0, 179, 0, 0, 0, 180, 0, 0, 0, 181, 0, 0, 0, 182, 0, 0, 0, 183, 0, 0, 0, 184, 0, 0, 0, 185, 0, 0, 0, 186, 0, 0, 0, 187, 0, 0, 0, 91, 123, 0, 0, 92, 124, 0, 0, 93, 125, 0, 0, 35, 126, 0, 0, 96, 172, 166, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 188, 0, 0, 0, 189, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 190, 0, 0, 0, 191, 0, 0, 0, 192, 0, 0, 0, 194, 0, 0, 0, 195, 0, 0, 0, 196, 0, 0, 0, 197, 0, 0, 0, 198, 0, 0, 0, 199, 0, 0, 0 };
/*     */   
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */   Keymap_gb()
/*     */   {
/* 277 */     this.start = 8;
/* 278 */     this.width = 4;
/* 279 */     this.count = 247;
/* 280 */     this.map = this._map;
/*     */   }
/*     */   
/*     */   public final int getCode(KeyEvent e) {
/* 284 */     if (e.isShiftDown()) this.state = ((byte)(this.state | 0x1));
/* 285 */     if (e.isControlDown()) this.state = ((byte)(this.state | 0x4));
/* 286 */     if (e.isAltDown()) this.state = ((byte)(this.state | 0x8));
/* 287 */     int key = e.getKeyCode();
/* 288 */     if (key != 0) {
/* 289 */       switch (key)
/*     */       {
/*     */       case 65: 
/*     */       case 66: 
/*     */       case 67: 
/*     */       case 68: 
/*     */       case 69: 
/*     */       case 70: 
/*     */       case 71: 
/*     */       case 72: 
/*     */       case 73: 
/*     */       case 74: 
/*     */       case 75: 
/*     */       case 76: 
/*     */       case 77: 
/*     */       case 78: 
/*     */       case 79: 
/*     */       case 80: 
/*     */       case 81: 
/*     */       case 82: 
/*     */       case 83: 
/*     */       case 84: 
/*     */       case 85: 
/*     */       case 86: 
/*     */       case 87: 
/*     */       case 88: 
/*     */       case 89: 
/*     */       case 90: 
/*     */         break;
/*     */       case 48: 
/*     */       case 49: 
/*     */       case 50: 
/*     */       case 51: 
/*     */       case 52: 
/*     */       case 53: 
/*     */       case 54: 
/*     */       case 55: 
/*     */       case 56: 
/*     */       case 57: 
/*     */         break;
/*     */       case 10: 
/* 330 */         key = 65293; break;
/*     */       case 8: 
/* 332 */         key = 65288; break;
/*     */       case 9: 
/* 334 */         key = 65289; break;
/*     */       
/*     */ 
/*     */ 
/*     */       case 32: 
/*     */       case 44: 
/*     */       case 46: 
/*     */       case 47: 
/*     */       case 59: 
/*     */       case 61: 
/*     */       case 91: 
/*     */       case 92: 
/*     */       case 93: 
/*     */         break;
/*     */       
/*     */ 
/*     */ 
/*     */       case 192: 
/* 352 */         if (e.getKeyChar() == '\'') { key = 39;
/* 353 */         } else if (e.getKeyChar() == '@') { key = 64;
/*     */         } else
/* 355 */           key = 96;
/*     */         break;
/* 357 */       case 222:  if (e.getKeyChar() == '#') { key = 35;
/* 358 */         } else if (e.getKeyChar() == '~') { key = 126;
/*     */         } else
/* 360 */           key = 39;
/*     */         break;
/* 362 */       case 16:  key = 65505; break;
/*     */       case 17: 
/* 364 */         key = 65507; break;
/*     */       case 18: 
/* 366 */         key = 65513; break;
/*     */       case 19: 
/* 368 */         key = 65299; break;
/*     */       case 20: 
/* 370 */         key = 65509; break;
/*     */       case 27: 
/* 372 */         key = 65307; break;
/*     */       case 33: 
/* 374 */         key = 65365; break;
/*     */       case 34: 
/* 376 */         key = 65366; break;
/*     */       case 35: 
/* 378 */         key = 65367; break;
/*     */       case 36: 
/* 380 */         key = 65360; break;
/*     */       case 37: 
/* 382 */         key = 65361; break;
/*     */       case 38: 
/* 384 */         key = 65362; break;
/*     */       case 39: 
/* 386 */         key = 65363; break;
/*     */       case 40: 
/* 388 */         key = 65364; break;
/*     */       case 96: 
/* 390 */         key = 65456; break;
/*     */       case 97: 
/* 392 */         key = 65457; break;
/*     */       case 98: 
/* 394 */         key = 65458; break;
/*     */       case 99: 
/* 396 */         key = 65459; break;
/*     */       case 100: 
/* 398 */         key = 65460; break;
/*     */       case 101: 
/* 400 */         key = 65461; break;
/*     */       case 102: 
/* 402 */         key = 65462; break;
/*     */       case 103: 
/* 404 */         key = 65463; break;
/*     */       case 104: 
/* 406 */         key = 65464; break;
/*     */       case 105: 
/* 408 */         key = 65465; break;
/*     */       case 106: 
/* 410 */         key = 65450; break;
/*     */       case 107: 
/* 412 */         key = 65451; break;
/*     */       case 108: 
/* 414 */         key = 65452; break;
/*     */       case 109: 
/* 416 */         key = 65453; break;
/*     */       case 110: 
/* 418 */         key = 65454; break;
/*     */       case 111: 
/* 420 */         key = 65455; break;
/*     */       case 112: 
/* 422 */         key = 65470; break;
/*     */       case 113: 
/* 424 */         key = 65471; break;
/*     */       case 114: 
/* 426 */         key = 65472; break;
/*     */       case 115: 
/* 428 */         key = 65473; break;
/*     */       case 116: 
/* 430 */         key = 65474; break;
/*     */       case 117: 
/* 432 */         key = 65475; break;
/*     */       case 118: 
/* 434 */         key = 65476; break;
/*     */       case 119: 
/* 436 */         key = 65477; break;
/*     */       case 120: 
/* 438 */         key = 65478; break;
/*     */       case 121: 
/* 440 */         key = 65479; break;
/*     */       case 122: 
/* 442 */         key = 65480; break;
/*     */       case 123: 
/* 444 */         key = 65481; break;
/*     */       case 127: 
/* 446 */         key = 65535; break;
/*     */       case 144: 
/* 448 */         key = 65407; break;
/*     */       case 145: 
/* 450 */         key = 65300; break;
/*     */       case 154: 
/* 452 */         key = 65377; break;
/*     */       case 155: 
/* 454 */         key = 65379; break;
/*     */       case 156: 
/* 456 */         key = 65386; break;
/*     */       case 157: 
/* 458 */         key = 65511; break;
/*     */       case 11: case 12: case 13: 
/*     */       case 14: case 15: case 21: 
/*     */       case 22: case 23: case 24: 
/*     */       case 25: case 26: 
/*     */       case 28: case 29: 
/*     */       case 30: case 31: 
/*     */       case 41: case 42: 
/*     */       case 43: case 45: 
/*     */       case 58: case 60: 
/*     */       case 62: case 63: 
/*     */       case 64: case 94: 
/*     */       case 95: case 124: 
/*     */       case 125: case 126: 
/*     */       case 128: case 129: 
/*     */       case 130: case 131: 
/*     */       case 132: case 133: 
/*     */       case 134: case 135: 
/*     */       case 136: case 137: 
/*     */       case 138: case 139: 
/*     */       case 140: case 141: 
/*     */       case 142: case 143: 
/*     */       case 146: case 147: 
/*     */       case 148: case 149: 
/*     */       case 150: case 151: 
/*     */       case 152: case 153: 
/*     */       case 158: case 159: 
/*     */       case 160: case 161: 
/*     */       case 162: case 163: 
/*     */       case 164: case 165: 
/*     */       case 166: case 167: 
/*     */       case 168: case 169: 
/*     */       case 170: case 171: 
/*     */       case 172: case 173: 
/*     */       case 174: case 175: 
/*     */       case 176: case 177: 
/*     */       case 178: case 179: 
/*     */       case 180: case 181: 
/*     */       case 182: case 183: 
/*     */       case 184: case 185: 
/*     */       case 186: case 187: 
/*     */       case 188: case 189: 
/*     */       case 190: case 191: 
/*     */       case 193: case 194: 
/*     */       case 195: case 196: 
/*     */       case 197: case 198: 
/*     */       case 199: case 200: 
/*     */       case 201: case 202: 
/*     */       case 203: case 204: 
/*     */       case 205: case 206: 
/*     */       case 207: case 208: 
/*     */       case 209: case 210: 
/*     */       case 211: case 212: 
/*     */       case 213: case 214: 
/*     */       case 215: case 216: 
/*     */       case 217: case 218: 
/*     */       case 219: case 220: 
/*     */       case 221: default: 
/* 516 */         key = e.getKeyChar();break;
/*     */       }
/*     */       
/*     */     } else {
/* 520 */       key = e.getKeyChar();
/*     */     }
/* 522 */     int s = 32;
/* 523 */     if (km != null) {
/* 524 */       int i = 0;
/* 525 */       int j = 0;
/* 526 */       s = km.start;
/* 527 */       while ((i < km.count * km.width) && 
/* 528 */         (km.map[i] != key)) {
/* 529 */         i++;
/* 530 */         j++;
/* 531 */         if (j == km.width) {
/* 532 */           j = 0;
/* 533 */           s++;
/*     */         }
/*     */       }
/*     */     }
/* 537 */     return s;
/*     */   }
/*     */ }


/* Location:              C:\Users\Joey\Downloads\launch.jar!\com\emt\proteus\xserver\display\input\Keymap_gb.class
 * Java compiler version: 6 (50.0)
 * JD-Core Version:       0.7.1
 */